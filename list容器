#include <iostream>
#include <list>
#include <vector>
#include <algorithm>
using namespace std;

void test(list<int> &L){
	for (list<int>::iterator it = L.begin(); it != L.end(); it++)
		cout << *it << " ";
	cout << endl;
}
void test1(vector<int> &v){
	for (vector<int>::iterator it = v.begin(); it != v.end(); it++)
		cout << *it << " ";
	cout << endl;
}
bool compare(int &a,int &b){
	return a > b;
}
int main(){
	list<int> L;
	for (int i = 0; i < 5; i++){
		L.push_back(i);
	}
	L.sort(compare);                             //list容器自带sort方法，原因是迭代器不支持随机访问
	test(L);

	vector<int> v;
	for (int i = 0; i < 5; i++){
		v.push_back(i);
	}
	sort(v.begin(), v.end(), compare);          ////vector容器自调用算法头文件sort方法，原因是迭代器支持随机访问，可调用algorithm
	test1(v);          
	return 0;
}
